{"remainingRequest":"C:\\Users\\Sakura\\Desktop\\前端页面\\myGit\\Dr.Dingdang\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Sakura\\Desktop\\前端页面\\myGit\\Dr.Dingdang\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Sakura\\Desktop\\前端页面\\myGit\\Dr.Dingdang\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sakura\\Desktop\\前端页面\\myGit\\Dr.Dingdang\\src\\views\\epidemic\\Epidemic.vue?vue&type=template&id=c0557fb6&scoped=true&","dependencies":[{"path":"C:\\Users\\Sakura\\Desktop\\前端页面\\myGit\\Dr.Dingdang\\src\\views\\epidemic\\Epidemic.vue","mtime":1611897057328},{"path":"C:\\Users\\Sakura\\Desktop\\前端页面\\myGit\\Dr.Dingdang\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1611243313106},{"path":"C:\\Users\\Sakura\\Desktop\\前端页面\\myGit\\Dr.Dingdang\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1611243323430},{"path":"C:\\Users\\Sakura\\Desktop\\前端页面\\myGit\\Dr.Dingdang\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1611243313106},{"path":"C:\\Users\\Sakura\\Desktop\\前端页面\\myGit\\Dr.Dingdang\\node_modules\\vue-loader\\lib\\index.js","mtime":1611243323428}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}